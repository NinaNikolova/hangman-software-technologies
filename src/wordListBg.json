[
    "A blueprint for creating objects in object-oriented programming, representing a group of related properties and behaviors.",
    "An instance of a class that encapsulates data and behavior.",
    "The concept of bundling data and methods that operate on the data within one unit, like a class, restricting access to some components.",
    "A mechanism by which one class can inherit fields and methods from another class, promoting code reuse.",
    "The ability of different classes to respond to the same method call in different ways, typically via method overriding or overloading.",
    "The concept of hiding the complex reality while exposing only the essential parts, often implemented through abstract classes or interfaces.",
    "A relationship between two or more classes that indicates how the objects of the classes are related.",
    "A type of association where one class contains a reference to another class but both can exist independently (a 'has-a' relationship).",
    "A stronger form of aggregation where the contained object cannot exist independently of the containing class (a 'part-of' relationship).",
    "A relationship where a more specific class (subclass) is based on a more general class (superclass), establishing a hierarchy.",
    "A UML diagram representing the functional requirements of a system, showing actors and their interactions with the system.",
    "A UML diagram that represents the static structure of a system, including its classes, attributes, methods, and relationships.",
    "A UML diagram that shows how objects interact in a particular sequence to complete a process or operation.",
    "A UML diagram that represents the flow of activities in a system or process, showing the control flow from one activity to another.",
    "A UML diagram that shows the states an object can be in and the transitions between those states based on events.",
    "An external entity that interacts with a system in a use case diagram, typically representing a user or another system.",
    "A mechanism in UML for organizing model elements, such as classes and diagrams, into groups.",
    "A relationship in which a change in one element may affect another element, often shown as a dashed arrow in UML diagrams.",
    "A contract that defines a set of methods a class must implement, used to achieve abstraction and polymorphism.",
    "Specifies the number of instances of one class that can be associated with instances of another class in a relationship.",
    "The process of resolving method calls at runtime, allowing for more flexibility and polymorphic behavior.",
    "A feature that allows a subclass to provide a specific implementation of a method already defined in its superclass.",
    "A feature that allows multiple methods in the same class to have the same name but different parameters.",
    "A special method used to initialize objects of a class.",
    "A special method used to perform cleanup before an object is destroyed.",
    "The process of resolving method calls at compile time, usually for static methods.",
    "A relationship in which a class is composed of one or more objects, indicating ownership.",
    "A design principle where an object delegates certain responsibilities to another helper object.",
    "A variable passed into a method that acts as input for the methodâ€™s operations.",
    "The type of value a method returns after its execution.",
    "A design pattern that defines the skeleton of an algorithm, allowing subclasses to redefine certain steps.",
    "A design pattern that establishes a one-to-many dependency between objects so that when one object changes state, all its dependents are notified.",
    "A design pattern that ensures a class has only one instance and provides a global point of access to it.",
    "A design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of created objects.",
    "A software design approach that separates an application into three interconnected components: Model, View, and Controller.",
    "A general reusable solution to a commonly occurring problem within a given context in software design.",
    "The process of restructuring existing computer code without changing its external behavior to improve its readability and reduce complexity.",
    "The fundamental structures of software systems, defining how they are organized and how components interact.",
    "A UML extension mechanism that allows the customization of UML models for specific domains.",
    "A number that indicates the order of messages in a sequence diagram, showing the flow of interactions."
  ]