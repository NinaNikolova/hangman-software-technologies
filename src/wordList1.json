{
  "actor": "An external entity that interacts with the system, typically a user or another system.",
  "attribute": "A characteristic or property of a class, often represented as a variable.",
  "association": "A relationship between classes that shows how they are connected.",
  "aggregation": "A type of association that represents a 'whole-part' relationship.",
  "artifact": "A physical piece of information used or produced by a system, like a file or document.",
  "behavior": "The actions or operations that an object or system performs.",
  "boundary": "An element that defines the interaction between the system and external entities.",
  "class": "A blueprint for creating objects, defining attributes and methods.",
  "collaboration": "An interaction between objects to achieve a common goal.",
  "component": "A modular part of a system that encapsulates its contents and defines its interface.",
  "composition": "A strong type of association where the part cannot exist independently of the whole.",
  "constraint": "A rule that restricts the behavior or structure of an element.",
  "controller": "An element that manages the flow of interactions within the system.",
  "dependency": "A relationship where a change in one element may affect another.",
  "deployment": "A diagram that shows the physical arrangement of hardware nodes and components.",
  "diagram": "A graphical representation of part of a model.",
  "element": "A basic building block in UML, such as a class, interface, or relationship.",
  "enumeration": "A data type that consists of a set of named values.",
  "exception": "An event that disrupts normal flow, requiring special handling.",
  "extension": "An addition to a base element, often used to apply stereotypes.",
  "feature": "A characteristic of an element, such as an attribute or operation of a class.",
  "flow": "A sequence of actions or events in a process or system.",
  "generalization": "A relationship where one element inherits the attributes and methods of another.",
  "inheritance": "A mechanism that allows one class to inherit characteristics of another.",
  "interaction": "A sequence of messages exchanged between objects to achieve a goal.",
  "interface": "A contract that defines a set of operations that implementing classes must fulfill.",
  "lifeline": "Represents the existence of an object within a sequence diagram.",
  "message": "A communication between objects that conveys information or triggers actions.",
  "method": "A function or procedure defined within a class that performs an action.",
  "model": "A representation of a system's structure, behavior, or interactions.",
  "module": "A logical grouping of elements, often used for code organization.",
  "multiplicity": "Specifies the number of instances in a relationship, like one-to-many.",
  "namespace": "A container for elements that provides context and avoids naming conflicts.",
  "node": "A physical device or environment in which system components are deployed.",
  "object": "An instance of a class that represents an entity with attributes and behavior.",
  "operation": "A function or behavior defined within a class or interface.",
  "package": "A grouping of related UML elements, such as classes or interfaces.",
  "parameter": "An input value passed to an operation.",
  "partition": "A division within a system, often used to represent separate responsibilities.",
  "polymorphism": "The ability of different objects to respond to the same operation in their own way.",
  "port": "An interaction point for a class or component to communicate with the outside.",
  "profile": "An extension mechanism that allows customization of UML for specific domains.",
  "property": "An attribute or association of a class that defines a characteristic.",
  "protocol": "A set of rules for communication between elements.",
  "realization": "A relationship where a class implements an interface.",
  "relation": "A connection between two elements that specifies their association.",
  "requirement": "A condition or capability needed by a system or user.",
  "role": "Defines the behavior expected of an object in a specific relationship.",
  "sequence": "An ordered set of interactions between objects in a specific order.",
  "signal": "An asynchronous message sent between objects to trigger a reaction.",
  "slot": "An assignment of a value to an attribute in a specific instance.",
  "specification": "A detailed description of system elements and behavior.",
  "state": "A condition in which an object exists at a given time.",
  "stereotype": "A way to extend UML elements with additional properties.",
  "structure": "The organization of components or classes in a system.",
  "subsystem": "A grouping of elements that represent a subset of the system.",
  "symbol": "A visual representation of an element in a diagram.",
  "template": "A generic class or method that can work with any data type.",
  "transition": "A change from one state to another in a state machine diagram.",
  "type": "Defines the nature of an attribute or variable, like integer or string.",
  "usecase": "A description of a user's interaction with a system to achieve a goal.",
  "view": "A perspective of the system's model focused on specific concerns.",
  "associationclass": "A class that is part of an association, representing additional attributes or behavior.",
  "composite": "An element made up of multiple parts, often with a hierarchical structure.",
  "connector": "A link that allows communication between elements.",
  "control": "Manages the flow and timing of interactions within a system.",
  "decision": "A point where a system makes a choice between multiple paths.",
  "derived": "An element that is calculated based on other elements.",
  "event": "An occurrence that may trigger changes or actions in the system.",
  "flowchart": "A graphical representation of a process, showing steps and decisions.",
  "fork": "A point where a single flow splits into multiple concurrent flows.",
  "hierarchy": "A ranking or organization of elements in layers.",
  "history": "A record of past states or actions within a state machine.",
  "initial": "The starting point of a process or state machine.",
  "instance": "A specific occurrence of a class or object.",
  "join": "A point where multiple flows merge into one.",
  "layer": "A horizontal division in a system for organizing functionality.",
  "link": "A connection between two objects representing an association.",
  "mapping": "An association between elements in different models or views.",
  "merge": "A point where flows in a process come together.",
  "metaclass": "A class of classes, defining the structure of other classes.",
  "note": "A comment or remark on a UML diagram.",
  "occurrence": "An event or instance happening at a specific time.",
  "parameterized": "A class or method defined with parameters that allow it to be generic.",
  "pattern": "A reusable solution to a common design problem.",
  "postcondition": "A condition that must be true after an operation completes.",
  "precondition": "A condition that must be true before an operation begins.",
  "protocolstate": "A state within a protocol that represents a specific condition.",
  "qualifier": "An additional attribute that distinguishes instances in an association.",
  "region": "A partition of a state machine or other model element.",
  "requirementtrace": "A link between a requirement and elements that satisfy it.",
  "scenario": "A specific sequence of interactions in a use case.",
  "self": "Refers to the instance of a class within itself.",
  "signalstate": "A state triggered by receiving a signal.",
  "specificationtrace": "A trace showing how an element meets its specification.",
  "stakeholder": "A person or group with an interest in the system.",
  "statemachine": "A behavioral model showing states and transitions.",
  "subtype": "A specialized form of a type that inherits its attributes and methods.",
  "swimlane": "A partition in an activity diagram representing a role or responsibility.",
  "tag": "A label attached to an element for additional information.",
  "testcase": "A set of conditions to test an element's functionality.",
  "trace": "A relationship showing dependencies between elements.",
  "transformation": "A change from one model to another.",
  "variation": "A difference between elements or processes, often used in patterns."
}
